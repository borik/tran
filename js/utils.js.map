{"version":3,"sources":["js/es6/utils.js"],"names":[],"mappings":";;;;;;;IAAM,KAAK;AACG,WADR,KAAK,GACM,EAAE;;uBADb,KAAK;AAET,OAAG;aAAA,aAAC,GAAG,EAAE;;AAEP,eAAO,IAAI,OAAO,CAAC,UAAS,OAAO,EAAE,MAAM,EAAE;;AAE3C,cAAI,GAAG,GAAG,IAAI,cAAc,EAAE,CAAC;AAC/B,aAAG,CAAC,IAAI,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;;AAErB,aAAG,CAAC,MAAM,GAAG,YAAW;;;AAGtB,gBAAI,GAAG,CAAC,MAAM,IAAI,GAAG,EAAE;;AAErB,qBAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;aACvB,MACI;;;AAGH,oBAAM,CAAC,KAAK,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC;aAC/B;WACF,CAAC;;;AAGF,aAAG,CAAC,OAAO,GAAG,YAAW;AACvB,kBAAM,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC,CAAC;WAChC,CAAC;;;AAGF,aAAG,CAAC,IAAI,EAAE,CAAC;SACZ,CAAC,CAAC;OACJ;;;;;;;SA/BG,KAAK;;;AAiCX,MAAM,CAAC,OAAO,GAAG,IAAI,KAAK,EAAE,CAAA","file":"js/es6/utils.js","sourcesContent":["class Utils {\n  constructor () {}\n  get(url) {\n    // Return a new promise.\n    return new Promise(function(resolve, reject) {\n      // Do the usual XHR stuff\n      var req = new XMLHttpRequest();\n      req.open('GET', url);\n\n      req.onload = function() {\n        // This is called even on 404 etc\n        // so check the status\n        if (req.status == 200) {\n          // Resolve the promise with the response text\n          resolve(req.response);\n        }\n        else {\n          // Otherwise reject with the status text\n          // which will hopefully be a meaningful error\n          reject(Error(req.statusText));\n        }\n      };\n\n      // Handle network errors\n      req.onerror = function() {\n        reject(Error(\"Network Error\"));\n      };\n\n      // Make the request\n      req.send();\n    });\n  }\n}\nmodule.exports = new Utils()\n"]}