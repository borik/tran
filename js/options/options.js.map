{"version":3,"sources":["js/es6/options.js"],"names":[],"mappings":"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","file":"js/es6/options.js","sourcesContent":["var _ = require('../utils.js');\n\nclass Options {\n  constructor () {}\n\n  /** Restores select box and checkbox state using\n   * the preferences stored in chrome.storage.*/\n  restore () {\n    // Use default value language is 'english' and fast translate is true\n    var defaults = {\n      language: '1',\n      fast: true,\n      memorize: false\n    }\n    this.storage('get', defaults, this.onRestore);\n  }\n\n  /** Saves options to chrome.storage */\n  save (params={restored:false}) {\n    // save options if only it is not restored onload\n    if (!params.restored) {\n      this.storage('set', this.options, this.onSave)\n    }\n  }\n\n  check_login () {\n    console.log('check login')\n  }\n\n\n  onSave () {\n    // let user know that options are saved.\n    var status = document.getElementById('status')\n    status.textContent = 'Options saved.'\n    let hideStatus = function () { status.textContent = ''}\n    setTimeout(hideStatus, 750);\n  }\n\n  /** Handler of success options restore */\n  onRestore (items) {\n      // set checkboxes\n      this.options = items;\n      this.save({restored:true})\n  }\n\n  /** chrome storage wrapper */\n  storage (op, data, cb) {\n    cb = cb.bind(this)\n    if (op == 'set') {\n      chrome.storage.sync.set(data, evt => cb(evt));\n    } else if (op == 'get') {\n      chrome.storage.sync.get(data, evt => cb(evt));\n    }\n  }\n\n  memorize () {\n    if (this.options.memorize) {\n      _.get('http://tran-service.com').then(function (response) {\n        console.log('success');\n      },\n      function (response) {\n        console.log('error');\n      });\n      //if (this.check_login()) {\n      //  need_sign\n      //} else {\n      //\n      //}\n    }\n  }\n\n  /** getter */\n  get options () {\n    return {\n        language: document.getElementById('language').value,\n        fast: document.getElementById('fast').checked,\n        memorize: document.getElementById('memorize').checked\n    }\n  }\n\n  /** setter */\n  set options (values={}) {\n      document.getElementById('language').value = values.language;\n      document.getElementById('fast').checked = values.fast;\n      document.getElementById('memorize').checked = values.memorize;\n  }\n}\n\nvar options = new Options();\n\ndocument.addEventListener('DOMContentLoaded', evt => options.restore(evt));\ndocument.getElementById('save').addEventListener('click', evt => options.save());\ndocument.getElementById('memorize').addEventListener('click', evt=>options.memorize())"]}